@page "/runnereditproifle/{RunnerId:int}"
@attribute [Authorize(Roles = "C")]
@using Microsoft.Extensions.Options
@using Frontend.Data
@using Frontend.Services
@using Frontend.ViewModels
@inject IRunnerService runnerService
@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject IOptions<BackendDomain> config
@inject IJSRuntime JSRuntime

<Header UrlBack=@($"managerunner/{RunnerId}") />

<!-- Main Container -->
<main>
    <div class="justify-content-center align-items-center bg-white">
        <div class="container-fluid">
            <div class="container text-center col-xl-10 col-md-8 col-lg-8 col-xl-8">
                <h3 class="text-center font-weight-normal dark-grey mt-3">Edit runner profile</h3>
            </div>
            <div class="row">
                <!-- Buffer column -->
                <div class="col-sm-0 col-md-1 col-lg-1 col-xl-2"></div>
                <div class="col-sm-12 col-md-10 col-lg-10 col-xl-8">
                    <EditForm Model="runnerView" OnValidSubmit="ValidEdit">
                        <div class="row">
                            <div class="col-sm-12 col-md-12 col-lg-6 col-xl-6 text-center">
                                <DataAnnotationsValidator />
                                <ValidationSummary />
                                <span class="text-danger">@messageInfo</span>
                                <!-- Email -->
                                <div class="form-group input-group">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text">Email: </span>
                                    </div>
                                    <input type="text" class="form-control" readonly value="@runner.Email" />
                                </div>

                                <!-- First Name -->
                                <div class="form-group input-group">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text">First Name: </span>
                                    </div>
                                    <input type="text" class="form-control" @bind-value="runnerView.FirstName" placeholder="First Name">
                                </div>
                                <!-- Last Name -->
                                <div class="form-group input-group">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text">Last Name: </span>
                                    </div>
                                    <input type="text" class="form-control" @bind-value="runnerView.LastName" placeholder="Last Name">
                                </div>
                                <!-- Gender -->
                                <div class="form-group input-group">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text md-addon">Gender: </span>
                                    </div>
                                    <select class="custom-select form-control"
                                            @bind="runnerView.GenderId">
                                        @if (Genders.Count == 0)
                                        {
                                            <option value="null" disabled>Loading...</option>
                                        }
                                        else
                                        {
                                            foreach (var gender in Genders)
                                            {
                                                <option value="@gender.Gender1">@gender.Gender1</option>
                                            }
                                        }
                                    </select>
                                </div>
                                <!-- Date of Birth -->
                                <div class="form-group input-group">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text">Date of birth: </span>
                                    </div>
                                    <input placeholder="Selected date" type="date" @bind="runnerView.DateBirth" class="form-control">
                                </div>

                                <!-- Country -->
                                <div class="form-group input-group">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text md-addon">Country: </span>
                                    </div>
                                    <select class="custom-select"
                                            @bind="runnerView.CountryId"
                                            searchable="Search here..">
                                        @if (Countries.Count == 0)
                                        {
                                            <option value="null" disabled>Loading...</option>
                                        }
                                        else
                                        {
                                            foreach (var country in Countries)
                                            {
                                                <option value="@country.CountryCode">@country.CountryName</option>
                                            }
                                        }
                                    </select>
                                </div>
                            </div>
                            <div class="col-sm-12 col-md-12 col-lg-6 col-xl-6 text-center">
                                <span class="h4 font-weight-normal dark-grey col-12">Change password</span>
                                <h5 class="h5 font-weight-normal mid-grey mt-4 font-italic">
                                    Leave these fields blank if you do
                                    not
                                    want to change the password
                                </h5>
                                <!-- Password -->
                                <div class="form-group input-group">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text md-addon">Password: </span>
                                    </div>
                                    <input type="password" class="form-control" @bind-value="runnerView.Password" placeholder="Password">
                                </div>
                                <!-- Password Again -->
                                <div class="form-group input-group">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text md-addon">Password Again: </span>
                                    </div>
                                    <input type="password" class="form-control" @bind-value="runnerView.ConfirmPassword" placeholder="Re-enter password">
                                </div>
                                <span class="h4 font-weight-normal dark-grey mt-4">Registration status</span>
                                <div class="form-group">
                                    @if (Statuses != null)
                                    {
                                    <select class="custom-select md-form w-50 mx-auto my-0"
                                            searchable="Search here.." @bind="runnerView.RegStatus">
                                        @foreach (var stat in Statuses)
                                        {
                                            <option value="@stat.RegistrationStatusId">@stat.RegistrationStatus1</option>
                                        }
                                    </select>
                                    }
                                    else
                                    {
                                        <h3>Loading data...</h3>
                                    }
                                </div>

                            </div>
                        </div>
                        <div class="row justify-content-center">
                            <!-- Buttons field -->
                            <div class="col-sm-12 col-md-4 col-lg-4 col-xl-2">
                                <button class="btn btn-light btn-block text-dark my-1"
                                        type="submit">Save</button>
                            </div>
                            <div class="col-sm-12 col-md-4 col-lg-4 col-xl-2">
                                <a class="btn btn-light btn-block text-dark my-1"
                                   href="managerunner/@RunnerId">Cancel</a>
                            </div>
                            <!-- /Buttons field -->
                        </div>
                    </EditForm>
                </div>
                <!-- Buffer column -->
                <div class="col-sm-0 col-md-1 col-lg-1 col-xl-2"></div>
            </div>
        </div>
    </div>
</main>
<!-- /Main Container -->

@code {
    [Parameter]
    public int RunnerId { get; set; }
    private EditRunnerCoordView runnerView;
    private Runner runner;
    private List<RegistrationStatus> _statuses;
    private List<Gender> _genders;
    private List<Country> _countries;
    public string messageInfo;

    public List<Gender> Genders
    {
        get => _genders;
        set
        {
            _genders = value;
            if (value.Count > 0)
            {
                runnerView.GenderId = value.First().Gender1;
                StateHasChanged();
            }
        }
    }

    public List<Country> Countries
    {
        get => _countries;
        set
        {
            _countries = value;
            if (value.Count > 0)
            {
                runnerView.CountryId = value.First().CountryCode;
                StateHasChanged();
            }
        }
    }

    public List<RegistrationStatus> Statuses
    {
        get => _statuses;
        set
        {
            _statuses = value;
            if (value.Count > 0)
            {
                runnerView.RegStatus = value.First().RegistrationStatusId.ToString();
                StateHasChanged();
            }
        }
    }

    protected override void OnInitialized()
    {
        runnerView = new EditRunnerCoordView();
        Genders = new List<Gender>();
        Countries = new List<Country>();
        runner = new Runner();
        Statuses = new List<RegistrationStatus>();
        base.OnInitialized();
    }

    protected override async Task OnInitializedAsync()
    {
        await JSRuntime.InvokeVoidAsync("setTitle", "Edit runner profile");
        runner = await runnerService.GetRunnerById(RunnerId);
        Statuses = await Http.GetJsonAsync<List<RegistrationStatus>>($"{config.Value.Domain}/api/RegistrationStatus/");
        Genders = await Http.GetJsonAsync<List<Gender>>($"{config.Value.Domain}/api/Genders/");
        Countries = await Http.GetJsonAsync<List<Country>>($"{config.Value.Domain}/api/Countries/");
        runnerView = new EditRunnerCoordView
        {
            FirstName = runner.EmailNavigation.FirstName,
            LastName = runner.EmailNavigation.LastName,
            GenderId = runner.Gender,
            DateBirth = runner.DateOfBirth.Value,
            CountryId = runner.CountryCode,
            RegStatus = runner.Registration.First().RegistrationStatusId.ToString()
        };
    }

    private async Task<bool> ValidEdit()
    {
        var email = runner.Email;
        var editedRunner = new Runner
        {
            RunnerId = runner.RunnerId,
            Email = email,
            EmailNavigation = new User
            {
                Email = email,
                RoleId = "R",
                FirstName = runnerView.FirstName,
                LastName = runnerView.LastName,
                Password = string.IsNullOrEmpty(runnerView.Password) ? runner.EmailNavigation.Password : runnerView.Password
            },
            DateOfBirth = runnerView.DateBirth,
            Gender = runnerView.GenderId,
            CountryCode = runnerView.CountryId
        };

        var register = new Registration
        {
            RegistrationId = runner.Registration.First().RegistrationId,
            Runner = editedRunner,
            RegistrationStatus = Statuses.Single(x => x.RegistrationStatusId == byte.Parse(runnerView.RegStatus))
        };

        await runnerService.EditRunnerAsync(register);

        NavigationManager.NavigateTo($"/managerunner/{runner.RunnerId}");


        return await Task.FromResult(true);
    }
}
